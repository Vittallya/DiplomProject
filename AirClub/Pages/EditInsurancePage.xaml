<Page x:Class="AirClub.Pages.EditInsurancePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:AirClub.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      xmlns:v="clr-namespace:AirClub.ViewModels.Validators"
      xmlns:gif="http://wpfanimatedgif.codeplex.com"
      DataContext="{Binding EditInsuranceViewModel, Source={StaticResource ViewModelLocator}}"
      Title="{Binding Title}">

    <StackPanel Validation.Error="stack_Error" x:Name="stack" Margin="20 0" TextBlock.FontSize="12.5" MaxWidth="550"   MinWidth="250" >


        <DockPanel Margin="0 5">
            <TextBlock Text="Название" DockPanel.Dock="Top"/>
            <TextBox 
                Style="{StaticResource ValidationControl}"
                Padding="2"
                IsReadOnly="{Binding IsReadOnly}"
                Margin="0 5 0 0" 
                FontSize="16">
                <Binding Path="CurrentElement.Name" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True" >
                    <Binding.ValidationRules>
                        <v:TextBoxRule/>
                        <ExceptionValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
        </DockPanel>


        <DockPanel Margin="0 5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Margin="0 0 5 0">
                    <TextBlock Text="Стоимость" DockPanel.Dock="Top"/>
                    <TextBox 
                        Style="{StaticResource ValidationControl}"
                        Padding="2"
                        IsReadOnly="{Binding IsReadOnly}"
                        Margin="0 5 0 0" 
                        FontSize="16">
                        <Binding Path="CurrentElement.Cost" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True" >
                            <Binding.ValidationRules>
                                <v:PositiveValueRule/>
                                <ExceptionValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>
                </StackPanel>

                <StackPanel Margin="5 0 0 0" Grid.Column="1">
                    <TextBlock Text="Период оплаты (дн.)" DockPanel.Dock="Top"/>
                    <TextBox 
                        Style="{StaticResource ValidationControl}"
                        Padding="2"
                        IsReadOnly="{Binding IsReadOnly}"
                        Margin="0 5 0 0" 
                        FontSize="16">
                        <Binding Path="CurrentElement.PayementPeriod" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True" >
                            <Binding.ValidationRules>
                                <v:PositiveValueRule/>
                                <ExceptionValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox>
                </StackPanel>
            </Grid>
        </DockPanel>


        <DockPanel  Margin="0 5">
            <TextBlock Text="Тип компансации" DockPanel.Dock="Top"/>
            <ComboBox 
                
                Padding="5 2"
                IsEnabled="{Binding IsReadOnly, Converter={StaticResource BoolInvert}}"
                Margin="0 5 0 0" 
                ItemsSource="{Binding CompensationsTypes}"
                SelectedItem="{Binding CurrentElement.Compensation, UpdateSourceTrigger=PropertyChanged}"
                FontSize="14"/>
        </DockPanel>

        <DockPanel  Margin="0 5">
            <TextBlock Text="Тип страховки" DockPanel.Dock="Top"/>
            <ComboBox 
                
                Padding="5 2"
                IsEnabled="{Binding IsReadOnly, Converter={StaticResource BoolInvert}}"
                Margin="0 5 0 0" 
                ItemsSource="{Binding InsuranceTypes}"
                SelectedItem="{Binding CurrentElement.InsuranceType, UpdateSourceTrigger=PropertyChanged}"
                FontSize="14"/>
        </DockPanel>

        <DockPanel  Margin="0 5">
            <TextBlock Text="Срок действия (дн.)" DockPanel.Dock="Top"/>

            <CheckBox
                    Margin="0 5"
                    DockPanel.Dock="Top"
                    IsChecked="{Binding IsValidityUndefined}"
                    FontSize="14"
                    Content="определяется сроком пербывания за границей"/>
            
            <DockPanel 
                Visibility="{Binding IsValidityUndefined, Converter={StaticResource BoolToVisibilityInvert}}"
                Margin="0 5" 
                DockPanel.Dock="Top">


                

                <TextBox Text="{Binding CurrentElement.Validity}"
                     Width="70"
                     Padding="0 2"
                     VerticalAlignment="Center"
                     IsReadOnly="True"/>

            <Slider 
                DockPanel.Dock="Top"                                
                Margin="5 5"
                Minimum="{Binding CurrentElement.PayementPeriod, UpdateSourceTrigger=PropertyChanged}" 
                Maximum="730" 
                TickFrequency="1"
                IsSnapToTickEnabled="True"
                Value="{Binding CurrentElement.Validity}"
                TickPlacement="BottomRight"/>
            </DockPanel>
            
        </DockPanel>

        <DockPanel 
                Visibility="{Binding IsRest, Converter={StaticResource BoolToVisibility}}"
                Margin="0 5">

            <TextBlock Margin="0 0 0 5" Text="Страховая компания" DockPanel.Dock="Top"/>

            <Button 
                    Visibility="{Binding IsReadOnly, Converter={StaticResource BoolToVisibilityInvert}}"
                    Style="{StaticResource ButtonIcon}"
                    Command="{Binding ChoosePartner}"
                    DockPanel.Dock="Right"
                    HorizontalAlignment="Right" 
                    Margin="10 0 0 0">
                <Image  Height="25" Source="/Resources/import1.png"/>
            </Button>

            <ComboBox 
                    VerticalAlignment="Center"
                    IsEnabled="{Binding IsReadOnly, Converter={StaticResource BoolInvert}}"
                    ItemsSource="{Binding Partners}"
                    SelectedItem="{Binding SelectedPartner, UpdateSourceTrigger=PropertyChanged}"
                    DisplayMemberPath="Name"
                    FontSize="16"/>

        </DockPanel>

        <Button 
            x:Name="btn"
            HorizontalContentAlignment="Center" 
            Command="{Binding Accept}"  
            Margin="0 10" 
            Padding="0 4">

            <Grid Height="30" >
                <Image gif:ImageBehavior.AnimatedSource="/Resources/loading1.gif"
                       gif:ImageBehavior.RepeatBehavior="Forever"
                       Margin="-35 0 0 0"
                       Visibility="{Binding LoadingVisibility}"
                       HorizontalAlignment="Left"/>
                <TextBlock 
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Center" Text="Применить"/>
            </Grid>
        </Button>


    </StackPanel>
</Page>
